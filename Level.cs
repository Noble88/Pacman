using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Level {
  #region Variables
    char[,] BG = new char[,] {
          { '|' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '|' },//1
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//2
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//3
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//4
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//5
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//6
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//7
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//8
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//9
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//10
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//11
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//12
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//13
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//14
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//15
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//16
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//17
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//18
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//19
          { '|' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '|' },//20
        }; //Background
    char[,] FG = new char[,] {
          { '|' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '|' },//1
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//2
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//3
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//4
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//5
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//6
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//7
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//8
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//9
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//10
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//11
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//12
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//13
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//14
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//15
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//16
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//17
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//18
          { '|' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , ',' , '|' },//19
          { '|' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '|' },//20
        }; //Foreground
    public ArrayList pos;
    public string name; //Holds the name that is displayed in the hud & other references
   #endregion
    
    public Level(){}
    public Level(string name, char[,] background, char[,] foreground) {
      this.name = name;
      
      for(byte y = 0; y<20;y++){ //Assigns the forground & background
        for(byte x=0; x<20;x++){ 
          FG[y,x]=foreground[y,x];
          BG[y,x]=background[y,x];
        }
      }
    }

    #region Methods for Changing Chars in FG & BG
    //Note: Fg=forground & BG = background
    public char   getE  (Vector2Int pos, bool getFG){ //This get the character of the 2D array using a given position 
      if(getFG){return FG[pos.y,pos.x];}
      else     {return BG[pos.y,pos.x];}
    }
    public void   setE  (Vector2Int pos, char e, bool editFG){ //This will change a character in the 2D array using the givien position
      if(editFG){FG[pos.y,pos.x]=e;}
      else      {BG[pos.y,pos.x]=e;}
    }
    public void   flipE (Vector2Int pos, bool flipFG){//This will make the character in the FG to the BG within the given position
      if(flipFG){FG[pos.y,pos.x]=BG[pos.y,pos.x];}
      else      {BG[pos.y,pos.x]=FG[pos.y,pos.x];}
    }
    #endregion
}
